name: Build
on: [push, workflow_dispatch]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
            php-version: 8.2
            extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
            coverage: none
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - run: composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
      - run: ./vendor/bin/php-cs-fixer fix --config .php-cs-fixer.dist.php --dry-run
      - run: npm install
      - run: npm run eslint
      - run: npm run production
      - name: Configure application
        run: |
          cp .env.ci .env
          php artisan cache:clear
          php artisan config:clear
          php artisan key:generate
      - run: ./vendor/bin/phpunit --colors=never

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: Logs
          path: ./storage/logs

  deploy:
    if: github.ref_name == 'main' || github.ref_name == 'staging'
    name: Deploy application
    runs-on: ubuntu-latest
    needs: [build]
    env:
      VAPOR_API_TOKEN: ${{ secrets.VAPOR_API_TOKEN }}
      ENVIRONMENT: ${{ github.ref_name }} == 'main' && 'production' || 'staging'
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
            php-version: 8.2
            extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
            coverage: none
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - run: composer install --no-dev --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
      - run: ./vendor/bin/vapor env:pull ${{ env.ENVIRONMENT }}
      - run: cp .env.${{ env.ENVIRONMENT }} .env
      - run: php artisan generate:sitemap
      - run: ./vendor/bin/vapor deploy ${{ env.ENVIRONMENT }}

      - name: Purge Cloudflare cache
        uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
